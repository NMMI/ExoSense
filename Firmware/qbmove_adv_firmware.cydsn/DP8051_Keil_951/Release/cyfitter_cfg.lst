C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Release\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB DF(N
                    -DEBUG) WL(2) PR(.\DP8051_Keil_951\Release/cyfitter_cfg.lst) CD OT(8,SPEED) DF(CYAPP_ECC_OFFSET=1216) OJ(.\DP8051_Keil_95
                    -1\Release\cyfitter_cfg.obj)

line level    source

*** MESSAGE C286 IN LINE 0 OF (null): license limits optimization to level 5
   1          /*******************************************************************************
   2          * File Name: cyfitter_cfg.c
   3          * 
   4          * PSoC Creator  3.3 SP1
   5          *
   6          * Description:
   7          * This file contains device initialization code.
   8          * Except for the user defined sections in CyClockStartupError(), this file should not be modified.
   9          * This file is automatically generated by PSoC Creator.
  10          *
  11          ********************************************************************************
  12          * Copyright (c) 2007-2015 Cypress Semiconductor.  All rights reserved.
  13          * You may use this file only in accordance with the license, terms, conditions, 
  14          * disclaimers, and limitations in the end user license agreement accompanying 
  15          * the software package with which this file was provided.
  16          ********************************************************************************/
  17          
  18          #include <string.h>
  19          #include "cytypes.h"
  20          #include "cydevice_trm.h"
  21          #include "cyfitter.h"
  22          #include "CyLib.h"
  23          #include "cyfitter_cfg.h"
  24          
  25          #define CY_NEED_CYCLOCKSTARTUPERROR 1
  26          
  27          
  28          #if defined(__C51__) || defined(__CX51__)
  29                  #define CYPACKED
  30                  #define CYPACKED_ATTR
  31                  #define CYALIGNED
  32                  #define DMAINITSEC
  33              #define CY_CFG_UNUSED
  34                  #define CY_CFG_MEMORY_BARRIER() do { } while (0)
  35          
  36          
  37          
  38                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  39                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  40                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  41          #else
                      #error Unsupported toolchain
              #endif
  44          
  45          
  46          
  47          /* Clock startup error codes                                                   */
  48          #define CYCLOCKSTART_NO_ERROR    0u
  49          #define CYCLOCKSTART_XTAL_ERROR  1u
  50          #define CYCLOCKSTART_32KHZ_ERROR 2u
  51          #define CYCLOCKSTART_PLL_ERROR   3u
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 2   

  52          
  53          #ifdef CY_NEED_CYCLOCKSTARTUPERROR
  54          /*******************************************************************************
  55          * Function Name: CyClockStartupError
  56          ********************************************************************************
  57          * Summary:
  58          *  If an error is encountered during clock configuration (crystal startup error,
  59          *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
  60          *  the customer, this function will stop in an infinite loop.
  61          *
  62          * Parameters:
  63          *   void
  64          *
  65          * Return:
  66          *   void
  67          *
  68          *******************************************************************************/
  69          CY_CFG_UNUSED
  70          static void CyClockStartupError(uint8 errorCode);
  71          CY_CFG_UNUSED
  72          static void CyClockStartupError(uint8 errorCode)
  73          {
  74   1          /* To remove the compiler warning if errorCode not used.                */
  75   1          errorCode = errorCode;
  76   1      
  77   1          /* `#START CyClockStartupError` */
  78   1      
  79   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
  80   1          /* we will end up here to allow the customer to implement something to  */
  81   1          /* deal with the clock condition.                                       */
  82   1      
  83   1          /* `#END` */
  84   1      
  85   1          /* If nothing else, stop here since the clocks have not started         */
  86   1          /* correctly.                                                           */
  87   1          while(1) {}
  88   1      }
  89          #endif
  90          
  91          /* IDMUX Address: CYREG_IDMUX_DRQ_CTL0 Size (bytes): 6 */
  92          #define BS_IDMUX_VAL ((const uint8 CYFAR *)(0x00080000u + CYAPP_ECC_OFFSET))
  93          
  94          /* IOPORT_0 Address: CYDEV_PRTDSI_PRT0_BASE Size (bytes): 7 */
  95          #define BS_IOPORT_0_VAL ((const uint8 CYFAR *)(0x00080008u + CYAPP_ECC_OFFSET))
  96          
  97          /* IOPORT_1 Address: CYDEV_PRTDSI_PRT1_BASE Size (bytes): 7 */
  98          #define BS_IOPORT_1_VAL ((const uint8 CYFAR *)(0x00080010u + CYAPP_ECC_OFFSET))
  99          
 100          /* IOPORT_2 Address: CYDEV_PRTDSI_PRT2_BASE Size (bytes): 7 */
 101          #define BS_IOPORT_2_VAL ((const uint8 CYFAR *)(0x00080018u + CYAPP_ECC_OFFSET))
 102          
 103          /* IOPORT_7 Address: CYDEV_PRTDSI_PRT12_BASE Size (bytes): 6 */
 104          #define BS_IOPORT_7_VAL ((const uint8 CYFAR *)(0x00080020u + CYAPP_ECC_OFFSET))
 105          
 106          /* IOPORT_8 Address: CYDEV_PRTDSI_PRT15_BASE Size (bytes): 7 */
 107          #define BS_IOPORT_8_VAL ((const uint8 CYFAR *)(0x00080028u + CYAPP_ECC_OFFSET))
 108          
 109          /* IDMUX_IRQ Address: CYREG_IDMUX_IRQ_CTL0 Size (bytes): 8 */
 110          #define BS_IDMUX_IRQ_VAL ((const uint8 CYFAR *)(0x00080030u + CYAPP_ECC_OFFSET))
 111          
 112          /* TMR0 Address: CYREG_TMR0_CFG0 Size (bytes): 12 */
 113          #define BS_TMR0_VAL ((const uint8 CYFAR *)(0x00080038u + CYAPP_ECC_OFFSET))
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 3   

 114          
 115          /* TMR1 Address: CYREG_TMR1_CFG0 Size (bytes): 12 */
 116          #define BS_TMR1_VAL ((const uint8 CYFAR *)(0x00080044u + CYAPP_ECC_OFFSET))
 117          
 118          /* TMR2 Address: CYREG_TMR2_CFG0 Size (bytes): 12 */
 119          #define BS_TMR2_VAL ((const uint8 CYFAR *)(0x00080050u + CYAPP_ECC_OFFSET))
 120          
 121          /* UDB_1_5_0_CONFIG Address: CYDEV_UCFG_B0_P0_U0_BASE Size (bytes): 128 */
 122          #define BS_UDB_1_5_0_CONFIG_VAL ((const uint8 CYFAR *)(0x0008005Cu + CYAPP_ECC_OFFSET))
 123          
 124          /* UDB_1_5_1_CONFIG Address: CYDEV_UCFG_B0_P0_U1_BASE Size (bytes): 128 */
 125          #define BS_UDB_1_5_1_CONFIG_VAL ((const uint8 CYFAR *)(0x000800DCu + CYAPP_ECC_OFFSET))
 126          
 127          /* UDB_1_4_1_CONFIG Address: CYDEV_UCFG_B0_P1_U0_BASE Size (bytes): 128 */
 128          #define BS_UDB_1_4_1_CONFIG_VAL ((const uint8 CYFAR *)(0x0008015Cu + CYAPP_ECC_OFFSET))
 129          
 130          /* UDB_1_4_0_CONFIG Address: CYDEV_UCFG_B0_P1_U1_BASE Size (bytes): 128 */
 131          #define BS_UDB_1_4_0_CONFIG_VAL ((const uint8 CYFAR *)(0x000801DCu + CYAPP_ECC_OFFSET))
 132          
 133          /* UDB_1_3_0_CONFIG Address: CYDEV_UCFG_B0_P2_U0_BASE Size (bytes): 128 */
 134          #define BS_UDB_1_3_0_CONFIG_VAL ((const uint8 CYFAR *)(0x0008025Cu + CYAPP_ECC_OFFSET))
 135          
 136          /* UDB_1_3_1_CONFIG Address: CYDEV_UCFG_B0_P2_U1_BASE Size (bytes): 128 */
 137          #define BS_UDB_1_3_1_CONFIG_VAL ((const uint8 CYFAR *)(0x000802DCu + CYAPP_ECC_OFFSET))
 138          
 139          /* UDB_1_2_1_CONFIG Address: CYDEV_UCFG_B0_P3_U0_BASE Size (bytes): 128 */
 140          #define BS_UDB_1_2_1_CONFIG_VAL ((const uint8 CYFAR *)(0x0008035Cu + CYAPP_ECC_OFFSET))
 141          
 142          /* UDB_1_2_0_CONFIG Address: CYDEV_UCFG_B0_P3_U1_BASE Size (bytes): 128 */
 143          #define BS_UDB_1_2_0_CONFIG_VAL ((const uint8 CYFAR *)(0x000803DCu + CYAPP_ECC_OFFSET))
 144          
 145          /* UDB_0_2_1_CONFIG Address: CYDEV_UCFG_B0_P4_U0_BASE Size (bytes): 128 */
 146          #define BS_UDB_0_2_1_CONFIG_VAL ((const uint8 CYFAR *)(0x0008045Cu + CYAPP_ECC_OFFSET))
 147          
 148          /* UDB_0_2_0_CONFIG Address: CYDEV_UCFG_B0_P4_U1_BASE Size (bytes): 128 */
 149          #define BS_UDB_0_2_0_CONFIG_VAL ((const uint8 CYFAR *)(0x000804DCu + CYAPP_ECC_OFFSET))
 150          
 151          /* UDB_0_3_0_CONFIG Address: CYDEV_UCFG_B0_P5_U0_BASE Size (bytes): 128 */
 152          #define BS_UDB_0_3_0_CONFIG_VAL ((const uint8 CYFAR *)(0x0008055Cu + CYAPP_ECC_OFFSET))
 153          
 154          /* UDB_0_3_1_CONFIG Address: CYDEV_UCFG_B0_P5_U1_BASE Size (bytes): 128 */
 155          #define BS_UDB_0_3_1_CONFIG_VAL ((const uint8 CYFAR *)(0x000805DCu + CYAPP_ECC_OFFSET))
 156          
 157          /* UDB_0_4_1_CONFIG Address: CYDEV_UCFG_B0_P6_U0_BASE Size (bytes): 128 */
 158          #define BS_UDB_0_4_1_CONFIG_VAL ((const uint8 CYFAR *)(0x0008065Cu + CYAPP_ECC_OFFSET))
 159          
 160          /* UDB_0_4_0_CONFIG Address: CYDEV_UCFG_B0_P6_U1_BASE Size (bytes): 128 */
 161          #define BS_UDB_0_4_0_CONFIG_VAL ((const uint8 CYFAR *)(0x000806DCu + CYAPP_ECC_OFFSET))
 162          
 163          /* UDB_0_5_0_CONFIG Address: CYDEV_UCFG_B0_P7_U0_BASE Size (bytes): 128 */
 164          #define BS_UDB_0_5_0_CONFIG_VAL ((const uint8 CYFAR *)(0x0008075Cu + CYAPP_ECC_OFFSET))
 165          
 166          /* UDB_0_5_1_CONFIG Address: CYDEV_UCFG_B0_P7_U1_BASE Size (bytes): 128 */
 167          #define BS_UDB_0_5_1_CONFIG_VAL ((const uint8 CYFAR *)(0x000807DCu + CYAPP_ECC_OFFSET))
 168          
 169          /* UDB_1_0_0_CONFIG Address: CYDEV_UCFG_B1_P2_U0_BASE Size (bytes): 128 */
 170          #define BS_UDB_1_0_0_CONFIG_VAL ((const uint8 CYFAR *)(0x0008085Cu + CYAPP_ECC_OFFSET))
 171          
 172          /* UDB_1_0_1_CONFIG Address: CYDEV_UCFG_B1_P2_U1_BASE Size (bytes): 128 */
 173          #define BS_UDB_1_0_1_CONFIG_VAL ((const uint8 CYFAR *)(0x000808DCu + CYAPP_ECC_OFFSET))
 174          
 175          /* UDB_1_1_1_CONFIG Address: CYDEV_UCFG_B1_P3_U0_BASE Size (bytes): 128 */
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 4   

 176          #define BS_UDB_1_1_1_CONFIG_VAL ((const uint8 CYFAR *)(0x0008095Cu + CYAPP_ECC_OFFSET))
 177          
 178          /* UDB_1_1_0_CONFIG Address: CYDEV_UCFG_B1_P3_U1_BASE Size (bytes): 128 */
 179          #define BS_UDB_1_1_0_CONFIG_VAL ((const uint8 CYFAR *)(0x000809DCu + CYAPP_ECC_OFFSET))
 180          
 181          /* UDB_0_1_1_CONFIG Address: CYDEV_UCFG_B1_P4_U0_BASE Size (bytes): 128 */
 182          #define BS_UDB_0_1_1_CONFIG_VAL ((const uint8 CYFAR *)(0x00080A5Cu + CYAPP_ECC_OFFSET))
 183          
 184          /* UDB_0_1_0_CONFIG Address: CYDEV_UCFG_B1_P4_U1_BASE Size (bytes): 128 */
 185          #define BS_UDB_0_1_0_CONFIG_VAL ((const uint8 CYFAR *)(0x00080ADCu + CYAPP_ECC_OFFSET))
 186          
 187          /* UDB_0_0_0_CONFIG Address: CYDEV_UCFG_B1_P5_U0_BASE Size (bytes): 128 */
 188          #define BS_UDB_0_0_0_CONFIG_VAL ((const uint8 CYFAR *)(0x00080B5Cu + CYAPP_ECC_OFFSET))
 189          
 190          /* UDB_0_0_1_CONFIG Address: CYDEV_UCFG_B1_P5_U1_BASE Size (bytes): 128 */
 191          #define BS_UDB_0_0_1_CONFIG_VAL ((const uint8 CYFAR *)(0x00080BDCu + CYAPP_ECC_OFFSET))
 192          
 193          /* UWRK_B0_WRK_STATCTL_BITS Address: CYDEV_UWRK_UWRK8_B0_BASE + 0x00000070u Size (bytes): 32 */
 194          #define BS_UWRK_B0_WRK_STATCTL_BITS_VAL ((const uint8 CYFAR *)(0x00080C5Cu + CYAPP_ECC_OFFSET))
 195          
 196          /* UWRK_B1_WRK_STATCTL_BITS Address: CYDEV_UWRK_UWRK8_B1_BASE + 0x00000070u Size (bytes): 32 */
 197          #define BS_UWRK_B1_WRK_STATCTL_BITS_VAL ((const uint8 CYFAR *)(0x00080C7Cu + CYAPP_ECC_OFFSET))
 198          
 199          /* UCFG_BCTL1 Address: CYREG_BCTL1_MDCLK_EN Size (bytes): 16 */
 200          #define BS_UCFG_BCTL1_VAL ((const uint8 CYFAR *)(0x00080C9Cu + CYAPP_ECC_OFFSET))
 201          
 202          /* UCFG_BCTL0 Address: CYREG_BCTL0_MDCLK_EN Size (bytes): 16 */
 203          #define BS_UCFG_BCTL0_VAL ((const uint8 CYFAR *)(0x00080CACu + CYAPP_ECC_OFFSET))
 204          
 205          /* DSI0_0_HV_ROUTING Address: CYDEV_UCFG_DSI13_BASE + 0x00000080u Size (bytes): 128 */
 206          #define BS_DSI0_0_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080CBCu + CYAPP_ECC_OFFSET))
 207          
 208          /* DSISWITCH_0_1 Address: CYDEV_UCFG_DSI12_BASE Size (bytes): 128 */
 209          #define BS_DSISWITCH_0_1_VAL ((const uint8 CYFAR *)(0x00080D3Cu + CYAPP_ECC_OFFSET))
 210          
 211          /* DSI0_1_HV_ROUTING Address: CYDEV_UCFG_DSI12_BASE + 0x00000080u Size (bytes): 128 */
 212          #define BS_DSI0_1_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080DBCu + CYAPP_ECC_OFFSET))
 213          
 214          /* DSI0_2_HV_ROUTING Address: CYDEV_UCFG_DSI7_BASE + 0x00000080u Size (bytes): 128 */
 215          #define BS_DSI0_2_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080E3Cu + CYAPP_ECC_OFFSET))
 216          
 217          /* DSISWITCH_0_3 Address: CYDEV_UCFG_DSI6_BASE Size (bytes): 128 */
 218          #define BS_DSISWITCH_0_3_VAL ((const uint8 CYFAR *)(0x00080EBCu + CYAPP_ECC_OFFSET))
 219          
 220          /* DSI0_3_HV_ROUTING Address: CYDEV_UCFG_DSI6_BASE + 0x00000080u Size (bytes): 128 */
 221          #define BS_DSI0_3_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00080F3Cu + CYAPP_ECC_OFFSET))
 222          
 223          /* DSISWITCH_0_4 Address: CYDEV_UCFG_DSI5_BASE Size (bytes): 128 */
 224          #define BS_DSISWITCH_0_4_VAL ((const uint8 CYFAR *)(0x00080FBCu + CYAPP_ECC_OFFSET))
 225          
 226          /* DSI0_4_HV_ROUTING Address: CYDEV_UCFG_DSI5_BASE + 0x00000080u Size (bytes): 128 */
 227          #define BS_DSI0_4_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x0008103Cu + CYAPP_ECC_OFFSET))
 228          
 229          /* DSISWITCH_0_5 Address: CYDEV_UCFG_DSI4_BASE Size (bytes): 128 */
 230          #define BS_DSISWITCH_0_5_VAL ((const uint8 CYFAR *)(0x000810BCu + CYAPP_ECC_OFFSET))
 231          
 232          /* DSI0_5_HV_ROUTING Address: CYDEV_UCFG_DSI4_BASE + 0x00000080u Size (bytes): 128 */
 233          #define BS_DSI0_5_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x0008113Cu + CYAPP_ECC_OFFSET))
 234          
 235          /* UDBSWITCH_0_0 Address: CYDEV_UCFG_B1_P5_ROUTE_BASE Size (bytes): 128 */
 236          #define BS_UDBSWITCH_0_0_VAL ((const uint8 CYFAR *)(0x000811BCu + CYAPP_ECC_OFFSET))
 237          
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 5   

 238          /* UDB_1_0_HV_ROUTING Address: CYDEV_UCFG_B1_P5_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 239          #define BS_UDB_1_0_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x0008123Cu + CYAPP_ECC_OFFSET))
 240          
 241          /* UDBSWITCH_1_0 Address: CYDEV_UCFG_B1_P2_ROUTE_BASE Size (bytes): 128 */
 242          #define BS_UDBSWITCH_1_0_VAL ((const uint8 CYFAR *)(0x000812BCu + CYAPP_ECC_OFFSET))
 243          
 244          /* UDB_2_0_HV_ROUTING Address: CYDEV_UCFG_B1_P2_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 245          #define BS_UDB_2_0_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x0008133Cu + CYAPP_ECC_OFFSET))
 246          
 247          /* UDBSWITCH_0_1 Address: CYDEV_UCFG_B1_P4_ROUTE_BASE Size (bytes): 128 */
 248          #define BS_UDBSWITCH_0_1_VAL ((const uint8 CYFAR *)(0x000813BCu + CYAPP_ECC_OFFSET))
 249          
 250          /* UDB_1_1_HV_ROUTING Address: CYDEV_UCFG_B1_P4_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 251          #define BS_UDB_1_1_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x0008143Cu + CYAPP_ECC_OFFSET))
 252          
 253          /* UDBSWITCH_1_1 Address: CYDEV_UCFG_B1_P3_ROUTE_BASE Size (bytes): 128 */
 254          #define BS_UDBSWITCH_1_1_VAL ((const uint8 CYFAR *)(0x000814BCu + CYAPP_ECC_OFFSET))
 255          
 256          /* UDB_2_1_HV_ROUTING Address: CYDEV_UCFG_B1_P3_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 257          #define BS_UDB_2_1_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x0008153Cu + CYAPP_ECC_OFFSET))
 258          
 259          /* UDBSWITCH_0_2 Address: CYDEV_UCFG_B0_P4_ROUTE_BASE Size (bytes): 128 */
 260          #define BS_UDBSWITCH_0_2_VAL ((const uint8 CYFAR *)(0x000815BCu + CYAPP_ECC_OFFSET))
 261          
 262          /* UDB_1_2_HV_ROUTING Address: CYDEV_UCFG_B0_P4_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 263          #define BS_UDB_1_2_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x0008163Cu + CYAPP_ECC_OFFSET))
 264          
 265          /* UDBSWITCH_1_2 Address: CYDEV_UCFG_B0_P3_ROUTE_BASE Size (bytes): 128 */
 266          #define BS_UDBSWITCH_1_2_VAL ((const uint8 CYFAR *)(0x000816BCu + CYAPP_ECC_OFFSET))
 267          
 268          /* UDB_2_2_HV_ROUTING Address: CYDEV_UCFG_B0_P3_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 269          #define BS_UDB_2_2_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x0008173Cu + CYAPP_ECC_OFFSET))
 270          
 271          /* UDBSWITCH_0_3 Address: CYDEV_UCFG_B0_P5_ROUTE_BASE Size (bytes): 128 */
 272          #define BS_UDBSWITCH_0_3_VAL ((const uint8 CYFAR *)(0x000817BCu + CYAPP_ECC_OFFSET))
 273          
 274          /* UDB_1_3_HV_ROUTING Address: CYDEV_UCFG_B0_P5_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 275          #define BS_UDB_1_3_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x0008183Cu + CYAPP_ECC_OFFSET))
 276          
 277          /* UDBSWITCH_1_3 Address: CYDEV_UCFG_B0_P2_ROUTE_BASE Size (bytes): 128 */
 278          #define BS_UDBSWITCH_1_3_VAL ((const uint8 CYFAR *)(0x000818BCu + CYAPP_ECC_OFFSET))
 279          
 280          /* UDB_2_3_HV_ROUTING Address: CYDEV_UCFG_B0_P2_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 281          #define BS_UDB_2_3_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x0008193Cu + CYAPP_ECC_OFFSET))
 282          
 283          /* UDBSWITCH_0_4 Address: CYDEV_UCFG_B0_P6_ROUTE_BASE Size (bytes): 128 */
 284          #define BS_UDBSWITCH_0_4_VAL ((const uint8 CYFAR *)(0x000819BCu + CYAPP_ECC_OFFSET))
 285          
 286          /* UDB_1_4_HV_ROUTING Address: CYDEV_UCFG_B0_P6_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 287          #define BS_UDB_1_4_HV_ROUTING_VAL ((const uint8 CYFAR *)(0x00081A3Cu + CYAPP_ECC_OFFSET))
 288          
 289          /* UDBSWITCH_1_4 Address: CYDEV_UCFG_B0_P1_ROUTE_BASE Size (bytes): 128 */
 290          #define BS_UDBSWITCH_1_4_VAL ((const uint8 CYFAR *)(0x00081ABCu + CYAPP_ECC_OFFSET))
 291          
 292          
 293          /*******************************************************************************
 294          * Function Name: cfg_dma_init
 295          ********************************************************************************
 296          * Summary:
 297          *  This function is used to copy device configuration data from constant values
 298          *  stored in memory into the proper chip configuration registers using DMA.  It
 299          *  pulls data out of the CFG_TD_LISTs to know exactly how/what to configure.
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 6   

 300          *
 301          * Parameters:  
 302          *   void
 303          *
 304          * Return:
 305          *   void
 306          *
 307          *******************************************************************************/
 308          static void cfg_dma_init(void);
 309          static void cfg_dma_init(void)
 310          {
 311   1              /* TD structure for big-endian systems. Requires 2-byte endian swap */
 312   1              CYPACKED struct td_t {
 313   1                      uint16 size;
 314   1                      uint8 flags;
 315   1                      uint8 next_td_ptr;
 316   1                      uint16 src;
 317   1                      uint16 dest;
 318   1              } CYPACKED_ATTR;
 319   1      
 320   1              /* UDB_2_4_HV_ROUTING Address: CYDEV_UCFG_B0_P1_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 321   1              DMAINITSEC static const uint8 CYCODE BS_UDB_2_4_HV_ROUTING_VAL[] = {
 322   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x81u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x08u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 323   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x01u, 0x10u, 0x28u, 0x80u, 0x00u, 0x01u, 0x00u, 0x42u, 0x00u,
             - 0x80u, 
 324   1                      0x00u, 0x00u, 0x00u, 0x08u, 0x80u, 0x00u, 0x02u, 0x20u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 325   1                      0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 326   1                      0x06u, 0x00u, 0x0Au, 0x00u, 0x0Eu, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x0Au, 0x00u, 0x04u, 0x00u, 0x05u,
             - 0x00u, 
 327   1                      0xC5u, 0x00u, 0x14u, 0x00u, 0x00u, 0x00u, 0xAFu, 0x00u, 0x70u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x10u,
             - 0x00u, 
 328   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x08u, 0x00u, 0x00u, 0x00u, 0x04u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 329   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 330   1      
 331   1              /* UDBSWITCH_0_5 Address: CYDEV_UCFG_B0_P7_ROUTE_BASE Size (bytes): 128 */
 332   1              DMAINITSEC static const uint8 CYCODE BS_UDBSWITCH_0_5_VAL[] = {
 333   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x02u, 0x02u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 334   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x14u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x01u, 0x00u,
             - 0x01u, 
 335   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x02u, 0x00u, 0x20u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x82u,
             - 0x08u, 
 336   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x05u, 
 337   1                      0x00u, 0x00u, 0x00u, 0x02u, 0x00u, 0x00u, 0x80u, 0x00u, 0x02u, 0x26u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x25u, 
 338   1                      0x00u, 0x22u, 0x40u, 0x00u, 0x00u, 0x00u, 0x02u, 0x18u, 0x00u, 0x22u, 0x00u, 0x00u, 0x00u, 0x00u, 0x20u,
             - 0x00u, 
 339   1                      0x00u, 0x24u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x02u, 0x00u, 0x00u, 0x00u, 0x00u, 0x41u, 0x00u,
             - 0x14u, 
 340   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x28u, 0x01u, 0x00u, 0x20u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 341   1      
 342   1              /* UDB_1_5_HV_ROUTING Address: CYDEV_UCFG_B0_P7_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 343   1              DMAINITSEC static const uint8 CYCODE BS_UDB_1_5_HV_ROUTING_VAL[] = {
 344   1                      0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x20u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 7   

 345   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 346   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 347   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 348   1                      0x00u, 0x00u, 0x00u, 0x00u, 0xE0u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0xB0u, 0x00u, 0x00u, 0x00u, 0xC0u,
             - 0x00u, 
 349   1                      0x81u, 0x00u, 0x2Cu, 0x00u, 0x00u, 0x00u, 0x25u, 0x00u, 0x0Eu, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x04u,
             - 0x00u, 
 350   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 351   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 352   1      
 353   1              /* UDBSWITCH_1_5 Address: CYDEV_UCFG_B0_P0_ROUTE_BASE Size (bytes): 128 */
 354   1              DMAINITSEC static const uint8 CYCODE BS_UDBSWITCH_1_5_VAL[] = {
 355   1                      0x40u, 0x00u, 0x00u, 0x20u, 0x00u, 0x00u, 0x00u, 0x00u, 0x01u, 0x00u, 0x03u, 0x00u, 0x00u, 0x00u, 0x40u,
             - 0x04u, 
 356   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x48u, 0x00u, 0x00u, 0x40u,
             - 0x00u, 
 357   1                      0x40u, 0x01u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x01u, 0x42u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 358   1                      0x80u, 0x00u, 0x01u, 0x20u, 0x00u, 0x00u, 0x00u, 0x80u, 0x10u, 0x02u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 359   1                      0x20u, 0x40u, 0x80u, 0x00u, 0x30u, 0x00u, 0x00u, 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x80u, 0x00u,
             - 0x00u, 
 360   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x80u, 0x00u, 0x00u,
             - 0x10u, 
 361   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x80u, 0x80u, 0x04u, 0x00u, 0x80u, 0x00u, 0x01u, 0x00u, 0x40u, 0x00u,
             - 0x00u, 
 362   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x02u, 0x00u, 0x00u, 0x00u, 0x02u,
             - 0x00u};
 363   1      
 364   1              /* UDB_2_5_HV_ROUTING Address: CYDEV_UCFG_B0_P0_ROUTE_BASE + 0x00000080u Size (bytes): 128 */
 365   1              DMAINITSEC static const uint8 CYCODE BS_UDB_2_5_HV_ROUTING_VAL[] = {
 366   1                      0x08u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x80u, 0x00u, 0x00u,
             - 0x00u, 
 367   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 368   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 369   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 370   1                      0x05u, 0x00u, 0x59u, 0x00u, 0x80u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x09u, 0x00u, 0x1Du, 0x00u, 0x05u,
             - 0x00u, 
 371   1                      0xCBu, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x38u, 0x00u, 0x30u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x18u,
             - 0x00u, 
 372   1                      0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x06u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 373   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 374   1      
 375   1              /* DSISWITCH_1_0 Address: CYDEV_UCFG_DSI9_BASE Size (bytes): 128 */
 376   1              DMAINITSEC static const uint8 CYCODE BS_DSISWITCH_1_0_VAL[] = {
 377   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 378   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 379   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 380   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 8   

             - 0x00u, 
 381   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 382   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 383   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 384   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x80u, 0x00u, 0x00u,
             - 0x00u};
 385   1      
 386   1              /* DSI3_0_HV_ROUTING Address: CYDEV_UCFG_DSI9_BASE + 0x00000080u Size (bytes): 128 */
 387   1              DMAINITSEC static const uint8 CYCODE BS_DSI3_0_HV_ROUTING_VAL[] = {
 388   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0xA8u, 0x00u, 0x04u,
             - 0x00u, 
 389   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x60u, 0x00u, 0x04u,
             - 0x00u, 
 390   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x08u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 391   1                      0x00u, 0x01u, 0x00u, 0x20u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 392   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 393   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x20u,
             - 0x00u, 
 394   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 395   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 396   1      
 397   1              /* DSISWITCH_1_1 Address: CYDEV_UCFG_DSI8_BASE Size (bytes): 128 */
 398   1              DMAINITSEC static const uint8 CYCODE BS_DSISWITCH_1_1_VAL[] = {
 399   1                      0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 400   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 401   1                      0x00u, 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 402   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 403   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 404   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x20u, 
 405   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x04u, 0x00u, 0x08u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 406   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 407   1      
 408   1              /* DSI3_1_HV_ROUTING Address: CYDEV_UCFG_DSI8_BASE + 0x00000080u Size (bytes): 128 */
 409   1              DMAINITSEC static const uint8 CYCODE BS_DSI3_1_HV_ROUTING_VAL[] = {
 410   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x04u,
             - 0x00u, 
 411   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x60u, 0x00u, 0x00u,
             - 0x00u, 
 412   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x04u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 413   1                      0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 414   1                      0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 415   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x20u, 0x00u, 0x80u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 9   

 416   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 417   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 418   1      
 419   1              /* DSISWITCH_1_2 Address: CYDEV_UCFG_DSI3_BASE Size (bytes): 128 */
 420   1              DMAINITSEC static const uint8 CYCODE BS_DSISWITCH_1_2_VAL[] = {
 421   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 422   1                      0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 423   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 424   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 425   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 426   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 427   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 428   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x02u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 429   1      
 430   1              /* DSI3_2_HV_ROUTING Address: CYDEV_UCFG_DSI3_BASE + 0x00000080u Size (bytes): 128 */
 431   1              DMAINITSEC static const uint8 CYCODE BS_DSI3_2_HV_ROUTING_VAL[] = {
 432   1                      0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x02u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x40u,
             - 0x00u, 
 433   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x10u, 0x80u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x60u, 0x10u, 0x00u,
             - 0x00u, 
 434   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x04u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 435   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 436   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 437   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x80u, 0x00u, 0x00u,
             - 0x00u, 
 438   1                      0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x20u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 439   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 440   1      
 441   1              /* DSISWITCH_1_3 Address: CYDEV_UCFG_DSI2_BASE Size (bytes): 128 */
 442   1              DMAINITSEC static const uint8 CYCODE BS_DSISWITCH_1_3_VAL[] = {
 443   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 444   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x08u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 445   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 446   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 447   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u,
             - 0x00u, 
 448   1                      0x00u, 0x00u, 0x00u, 0x20u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 449   1                      0x00u, 0x00u, 0x00u, 0x80u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 450   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 451   1      
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 10  

 452   1              /* DSI3_3_HV_ROUTING Address: CYDEV_UCFG_DSI2_BASE + 0x00000080u Size (bytes): 128 */
 453   1              DMAINITSEC static const uint8 CYCODE BS_DSI3_3_HV_ROUTING_VAL[] = {
 454   1                      0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 455   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x80u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x60u, 0x10u, 0x00u,
             - 0x08u, 
 456   1                      0x00u, 0x00u, 0x00u, 0x20u, 0x00u, 0x00u, 0x04u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x08u, 
 457   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 458   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x20u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 459   1                      0x00u, 0x00u, 0x20u, 0x00u, 0x20u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 460   1                      0x00u, 0x00u, 0x20u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 461   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 462   1      
 463   1              /* DSISWITCH_1_4 Address: CYDEV_UCFG_DSI1_BASE Size (bytes): 128 */
 464   1              DMAINITSEC static const uint8 CYCODE BS_DSISWITCH_1_4_VAL[] = {
 465   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 466   1                      0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 467   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 468   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 469   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 470   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x08u,
             - 0x00u, 
 471   1                      0x20u, 0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 472   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 473   1      
 474   1              /* DSI3_4_HV_ROUTING Address: CYDEV_UCFG_DSI1_BASE + 0x00000080u Size (bytes): 128 */
 475   1              DMAINITSEC static const uint8 CYCODE BS_DSI3_4_HV_ROUTING_VAL[] = {
 476   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x60u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 477   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x80u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 478   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 479   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 480   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 481   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x80u, 0x00u, 0x80u, 0x00u, 0xC0u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 482   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x40u, 0x00u, 0x10u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 483   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 484   1      
 485   1              /* DSISWITCH_1_5 Address: CYDEV_UCFG_DSI0_BASE Size (bytes): 128 */
 486   1              DMAINITSEC static const uint8 CYCODE BS_DSISWITCH_1_5_VAL[] = {
 487   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 488   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 11  

             - 0x00u, 
 489   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 490   1                      0x00u, 0x00u, 0x60u, 0x00u, 0x00u, 0x00u, 0x20u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 491   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 492   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 493   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 494   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 495   1      
 496   1              /* DSI3_5_HV_ROUTING Address: CYDEV_UCFG_DSI0_BASE + 0x00000080u Size (bytes): 128 */
 497   1              DMAINITSEC static const uint8 CYCODE BS_DSI3_5_HV_ROUTING_VAL[] = {
 498   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x00u,
             - 0x00u, 
 499   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 500   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 501   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 502   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x30u, 0x00u, 0x00u,
             - 0x00u, 
 503   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 504   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u, 
 505   1                      0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
             - 0x00u};
 506   1      
 507   1              /* PHUB_CH1_CFGMEM_CFG0/1 initialization data */
 508   1              DMAINITSEC static const uint8 CYCODE CH1_ADDR_DATA0[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u
             -, 0x00u };
 509   1      
 510   1              /* PHUB_CH2_CFGMEM_CFG0/1 initialization data */
 511   1              DMAINITSEC static const uint8 CYCODE CH2_ADDR_DATA0[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x01u
             -, 0x00u };
 512   1      
 513   1              /* PHUB_CH4_CFGMEM_CFG0/1 initialization data */
 514   1              DMAINITSEC static const uint8 CYCODE CH4_ADDR_DATA0[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x10u, 0x00u, 0x01u
             -, 0x00u };
 515   1      
 516   1              /* PHUB_CH5_CFGMEM_CFG0/1 initialization data */
 517   1              DMAINITSEC static const uint8 CYCODE CH5_ADDR_DATA0[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x08u, 0x00u, 0x00u
             -, 0x00u };
 518   1      
 519   1              /* PHUB_CH6_CFGMEM_CFG0/1 initialization data */
 520   1              DMAINITSEC static const uint8 CYCODE CH6_ADDR_DATA0[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x08u, 0x00u, 0x01u
             -, 0x00u };
 521   1      
 522   1              /* Initialization data for each DMA channel's TD registers */
 523   1              DMAINITSEC static const uint8 CYCODE DMA_TD_START_CMD[] = { 0x01u, 0x00u, 0x00u, 0x00u, 0x01u };
 524   1      
 525   1              CYALIGNED static uint32 CYXDATA DMA_ZERO_VAL;
 526   1      
 527   1              /* This table holds all of the initialization data necessary for the DMA
 528   1                 process to transfer data from the source location to the destination. */
 529   1              DMAINITSEC static const struct td_t CYCODE CFG_TD_LIST0[] = {
 530   1                      /* Size, Flags, Next, Source, Destination */
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 12  

 531   1                      { 8u, 0x23u, 0x02u, (uint16)(uint32)(CH1_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM1_CFG0) },      /* TD 1 */
 532   1                      { 8u, 0x23u, 0x03u, (uint16)(uint32)(CH2_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM2_CFG0) },      /* TD 2 */
 533   1                      { 8u, 0x23u, 0x04u, (uint16)(uint32)(CH4_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM4_CFG0) },      /* TD 3 */
 534   1                      { 8u, 0x23u, 0x05u, (uint16)(uint32)(CH5_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM5_CFG0) },      /* TD 4 */
 535   1                      { 8u, 0x23u, 0x06u, (uint16)(uint32)(CH6_ADDR_DATA0), (uint16)(CYREG_PHUB_CFGMEM6_CFG0) },      /* TD 5 */
 536   1                      { 5u, 0x23u, 0x07u, (uint16)(uint32)(DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH1_BASIC_CFG) },   /* TD 6 */
 537   1                      { 5u, 0x23u, 0x08u, (uint16)(uint32)(DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH2_BASIC_CFG) },   /* TD 7 */
 538   1                      { 5u, 0x23u, 0x09u, (uint16)(uint32)(DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH4_BASIC_CFG) },   /* TD 8 */
 539   1                      { 5u, 0x23u, 0x0Au, (uint16)(uint32)(DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH5_BASIC_CFG) },   /* TD 9 */
 540   1                      { 5u, 0x23u, 0xFEu, (uint16)(uint32)(DMA_TD_START_CMD), (uint16)(CYREG_PHUB_CH6_BASIC_CFG) },   /* TD 10 *
             -/
 541   1                      { 64u, 0x22u, 0xFEu, (uint16)(uint32)(&DMA_ZERO_VAL), (uint16)(CYREG_PRT3_DR) },        /* TD 11 */
 542   1                      { 128u, 0x22u, 0x0Du, (uint16)(uint32)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_DSI7_BASE) },        /* TD 12 */
 543   1                      { 128u, 0x22u, 0xFEu, (uint16)(uint32)(&DMA_ZERO_VAL), (uint16)(CYDEV_UCFG_DSI13_BASE) },       /* TD 13 */
 544   1                      { 128u, 0x23u, 0x0Fu, (uint16)(uint32)(BS_UDB_2_4_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P1_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 14 */
 545   1                      { 128u, 0x23u, 0x10u, (uint16)(uint32)(BS_UDBSWITCH_0_5_VAL), (uint16)(CYDEV_UCFG_B0_P7_ROUTE_BASE) },  /
             -* TD 15 */
 546   1                      { 128u, 0x23u, 0x11u, (uint16)(uint32)(BS_UDB_1_5_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P7_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 16 */
 547   1                      { 128u, 0x23u, 0x12u, (uint16)(uint32)(BS_UDBSWITCH_1_5_VAL), (uint16)(CYDEV_UCFG_B0_P0_ROUTE_BASE) },  /
             -* TD 17 */
 548   1                      { 128u, 0x23u, 0x13u, (uint16)(uint32)(BS_UDB_2_5_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P0_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 18 */
 549   1                      { 128u, 0x23u, 0x14u, (uint16)(uint32)(BS_DSISWITCH_1_0_VAL), (uint16)(CYDEV_UCFG_DSI9_BASE) }, /* TD 19
             - */
 550   1                      { 128u, 0x23u, 0x15u, (uint16)(uint32)(BS_DSI3_0_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI9_BASE + 0x0000
             -0080u) },        /* TD 20 */
 551   1                      { 128u, 0x23u, 0x16u, (uint16)(uint32)(BS_DSISWITCH_1_1_VAL), (uint16)(CYDEV_UCFG_DSI8_BASE) }, /* TD 21
             - */
 552   1                      { 128u, 0x23u, 0x17u, (uint16)(uint32)(BS_DSI3_1_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI8_BASE + 0x0000
             -0080u) },        /* TD 22 */
 553   1                      { 128u, 0x23u, 0x18u, (uint16)(uint32)(BS_DSISWITCH_1_2_VAL), (uint16)(CYDEV_UCFG_DSI3_BASE) }, /* TD 23
             - */
 554   1                      { 128u, 0x23u, 0x19u, (uint16)(uint32)(BS_DSI3_2_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI3_BASE + 0x0000
             -0080u) },        /* TD 24 */
 555   1                      { 128u, 0x23u, 0x1Au, (uint16)(uint32)(BS_DSISWITCH_1_3_VAL), (uint16)(CYDEV_UCFG_DSI2_BASE) }, /* TD 25
             - */
 556   1                      { 128u, 0x23u, 0x1Bu, (uint16)(uint32)(BS_DSI3_3_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI2_BASE + 0x0000
             -0080u) },        /* TD 26 */
 557   1                      { 128u, 0x23u, 0x1Cu, (uint16)(uint32)(BS_DSISWITCH_1_4_VAL), (uint16)(CYDEV_UCFG_DSI1_BASE) }, /* TD 27
             - */
 558   1                      { 128u, 0x23u, 0x1Du, (uint16)(uint32)(BS_DSI3_4_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI1_BASE + 0x0000
             -0080u) },        /* TD 28 */
 559   1                      { 128u, 0x23u, 0x1Eu, (uint16)(uint32)(BS_DSISWITCH_1_5_VAL), (uint16)(CYDEV_UCFG_DSI0_BASE) }, /* TD 29
             - */
 560   1                      { 128u, 0x23u, 0xFEu, (uint16)(uint32)(BS_DSI3_5_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI0_BASE + 0x0000
             -0080u) },        /* TD 30 */
 561   1                      { 7u, 0x23u, 0x20u, (uint16)(uint32)(BS_IOPORT_0_VAL), (uint16)(CYDEV_PRTDSI_PRT0_BASE) },      /* TD 31 */
 562   1                      { 7u, 0x23u, 0x21u, (uint16)(uint32)(BS_IOPORT_1_VAL), (uint16)(CYDEV_PRTDSI_PRT1_BASE) },      /* TD 32 */
 563   1                      { 7u, 0x23u, 0x22u, (uint16)(uint32)(BS_IOPORT_2_VAL), (uint16)(CYDEV_PRTDSI_PRT2_BASE) },      /* TD 33 */
 564   1                      { 6u, 0x23u, 0x23u, (uint16)(uint32)(BS_IOPORT_7_VAL), (uint16)(CYDEV_PRTDSI_PRT12_BASE) },     /* TD 34 */
 565   1                      { 7u, 0x23u, 0x24u, (uint16)(uint32)(BS_IOPORT_8_VAL), (uint16)(CYDEV_PRTDSI_PRT15_BASE) },     /* TD 35 */
 566   1                      { 12u, 0x23u, 0x25u, (uint16)(uint32)(BS_TMR0_VAL), (uint16)(CYREG_TMR0_CFG0) },        /* TD 36 */
 567   1                      { 12u, 0x23u, 0x26u, (uint16)(uint32)(BS_TMR1_VAL), (uint16)(CYREG_TMR1_CFG0) },        /* TD 37 */
 568   1                      { 12u, 0x23u, 0x27u, (uint16)(uint32)(BS_TMR2_VAL), (uint16)(CYREG_TMR2_CFG0) },        /* TD 38 */
 569   1                      { 32u, 0x23u, 0x28u, (uint16)(uint32)(BS_UWRK_B0_WRK_STATCTL_BITS_VAL), (uint16)(CYDEV_UWRK_UWRK8_B0_BAS
             -E + 0x00000070u) },   /* TD 39 */
 570   1                      { 32u, 0x23u, 0xFEu, (uint16)(uint32)(BS_UWRK_B1_WRK_STATCTL_BITS_VAL), (uint16)(CYDEV_UWRK_UWRK8_B1_BAS
             -E + 0x00000070u) },   /* TD 40 */
 571   1                      { 8u, 0x23u, 0x2Au, (uint16)(uint32)(BS_IDMUX_IRQ_VAL), (uint16)(CYREG_IDMUX_IRQ_CTL0) },       /* TD 41 */
 572   1                      { 128u, 0x23u, 0x2Bu, (uint16)(uint32)(BS_UDB_1_5_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P0_U0_BASE) },  /
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 13  

             -* TD 42 */
 573   1                      { 128u, 0x23u, 0x2Cu, (uint16)(uint32)(BS_UDB_1_5_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P0_U1_BASE) },  /
             -* TD 43 */
 574   1                      { 128u, 0x23u, 0x2Du, (uint16)(uint32)(BS_UDB_1_4_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P1_U0_BASE) },  /
             -* TD 44 */
 575   1                      { 128u, 0x23u, 0x2Eu, (uint16)(uint32)(BS_UDB_1_4_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P1_U1_BASE) },  /
             -* TD 45 */
 576   1                      { 128u, 0x23u, 0x2Fu, (uint16)(uint32)(BS_UDB_1_3_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P2_U0_BASE) },  /
             -* TD 46 */
 577   1                      { 128u, 0x23u, 0x30u, (uint16)(uint32)(BS_UDB_1_3_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P2_U1_BASE) },  /
             -* TD 47 */
 578   1                      { 128u, 0x23u, 0x31u, (uint16)(uint32)(BS_UDB_1_2_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P3_U0_BASE) },  /
             -* TD 48 */
 579   1                      { 128u, 0x23u, 0x32u, (uint16)(uint32)(BS_UDB_1_2_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P3_U1_BASE) },  /
             -* TD 49 */
 580   1                      { 128u, 0x23u, 0x33u, (uint16)(uint32)(BS_UDB_0_2_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P4_U0_BASE) },  /
             -* TD 50 */
 581   1                      { 128u, 0x23u, 0x34u, (uint16)(uint32)(BS_UDB_0_2_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P4_U1_BASE) },  /
             -* TD 51 */
 582   1                      { 128u, 0x23u, 0x35u, (uint16)(uint32)(BS_UDB_0_3_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P5_U0_BASE) },  /
             -* TD 52 */
 583   1                      { 128u, 0x23u, 0x36u, (uint16)(uint32)(BS_UDB_0_3_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P5_U1_BASE) },  /
             -* TD 53 */
 584   1                      { 128u, 0x23u, 0x37u, (uint16)(uint32)(BS_UDB_0_4_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P6_U0_BASE) },  /
             -* TD 54 */
 585   1                      { 128u, 0x23u, 0x38u, (uint16)(uint32)(BS_UDB_0_4_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P6_U1_BASE) },  /
             -* TD 55 */
 586   1                      { 128u, 0x23u, 0x39u, (uint16)(uint32)(BS_UDB_0_5_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P7_U0_BASE) },  /
             -* TD 56 */
 587   1                      { 128u, 0x23u, 0x3Au, (uint16)(uint32)(BS_UDB_0_5_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B0_P7_U1_BASE) },  /
             -* TD 57 */
 588   1                      { 128u, 0x23u, 0x3Bu, (uint16)(uint32)(BS_UDB_1_0_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P2_U0_BASE) },  /
             -* TD 58 */
 589   1                      { 128u, 0x23u, 0x3Cu, (uint16)(uint32)(BS_UDB_1_0_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P2_U1_BASE) },  /
             -* TD 59 */
 590   1                      { 128u, 0x23u, 0x3Du, (uint16)(uint32)(BS_UDB_1_1_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P3_U0_BASE) },  /
             -* TD 60 */
 591   1                      { 128u, 0x23u, 0x3Eu, (uint16)(uint32)(BS_UDB_1_1_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P3_U1_BASE) },  /
             -* TD 61 */
 592   1                      { 128u, 0x23u, 0x3Fu, (uint16)(uint32)(BS_UDB_0_1_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P4_U0_BASE) },  /
             -* TD 62 */
 593   1                      { 128u, 0x23u, 0x40u, (uint16)(uint32)(BS_UDB_0_1_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P4_U1_BASE) },  /
             -* TD 63 */
 594   1                      { 128u, 0x23u, 0x41u, (uint16)(uint32)(BS_UDB_0_0_0_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P5_U0_BASE) },  /
             -* TD 64 */
 595   1                      { 128u, 0x23u, 0x42u, (uint16)(uint32)(BS_UDB_0_0_1_CONFIG_VAL), (uint16)(CYDEV_UCFG_B1_P5_U1_BASE) },  /
             -* TD 65 */
 596   1                      { 16u, 0x23u, 0x43u, (uint16)(uint32)(BS_UCFG_BCTL1_VAL), (uint16)(CYREG_BCTL1_MDCLK_EN) },     /* TD 66 */
 597   1                      { 16u, 0x23u, 0x44u, (uint16)(uint32)(BS_UCFG_BCTL0_VAL), (uint16)(CYREG_BCTL0_MDCLK_EN) },     /* TD 67 */
 598   1                      { 128u, 0x23u, 0x45u, (uint16)(uint32)(BS_DSI0_0_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI13_BASE + 0x000
             -00080u) },        /* TD 68 */
 599   1                      { 128u, 0x23u, 0x46u, (uint16)(uint32)(BS_DSISWITCH_0_1_VAL), (uint16)(CYDEV_UCFG_DSI12_BASE) },        /* TD 6
             -9 */
 600   1                      { 128u, 0x23u, 0x47u, (uint16)(uint32)(BS_DSI0_1_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI12_BASE + 0x000
             -00080u) },        /* TD 70 */
 601   1                      { 128u, 0x23u, 0x48u, (uint16)(uint32)(BS_DSI0_2_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI7_BASE + 0x0000
             -0080u) },        /* TD 71 */
 602   1                      { 128u, 0x23u, 0x49u, (uint16)(uint32)(BS_DSISWITCH_0_3_VAL), (uint16)(CYDEV_UCFG_DSI6_BASE) }, /* TD 72
             - */
 603   1                      { 128u, 0x23u, 0x4Au, (uint16)(uint32)(BS_DSI0_3_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI6_BASE + 0x0000
             -0080u) },        /* TD 73 */
 604   1                      { 128u, 0x23u, 0x4Bu, (uint16)(uint32)(BS_DSISWITCH_0_4_VAL), (uint16)(CYDEV_UCFG_DSI5_BASE) }, /* TD 74
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 14  

             - */
 605   1                      { 128u, 0x23u, 0x4Cu, (uint16)(uint32)(BS_DSI0_4_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI5_BASE + 0x0000
             -0080u) },        /* TD 75 */
 606   1                      { 128u, 0x23u, 0x4Du, (uint16)(uint32)(BS_DSISWITCH_0_5_VAL), (uint16)(CYDEV_UCFG_DSI4_BASE) }, /* TD 76
             - */
 607   1                      { 128u, 0x23u, 0x4Eu, (uint16)(uint32)(BS_DSI0_5_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_DSI4_BASE + 0x0000
             -0080u) },        /* TD 77 */
 608   1                      { 128u, 0x23u, 0x4Fu, (uint16)(uint32)(BS_UDBSWITCH_0_0_VAL), (uint16)(CYDEV_UCFG_B1_P5_ROUTE_BASE) },  /
             -* TD 78 */
 609   1                      { 128u, 0x23u, 0x50u, (uint16)(uint32)(BS_UDB_1_0_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B1_P5_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 79 */
 610   1                      { 128u, 0x23u, 0x51u, (uint16)(uint32)(BS_UDBSWITCH_1_0_VAL), (uint16)(CYDEV_UCFG_B1_P2_ROUTE_BASE) },  /
             -* TD 80 */
 611   1                      { 128u, 0x23u, 0x52u, (uint16)(uint32)(BS_UDB_2_0_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B1_P2_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 81 */
 612   1                      { 128u, 0x23u, 0x53u, (uint16)(uint32)(BS_UDBSWITCH_0_1_VAL), (uint16)(CYDEV_UCFG_B1_P4_ROUTE_BASE) },  /
             -* TD 82 */
 613   1                      { 128u, 0x23u, 0x54u, (uint16)(uint32)(BS_UDB_1_1_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B1_P4_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 83 */
 614   1                      { 128u, 0x23u, 0x55u, (uint16)(uint32)(BS_UDBSWITCH_1_1_VAL), (uint16)(CYDEV_UCFG_B1_P3_ROUTE_BASE) },  /
             -* TD 84 */
 615   1                      { 128u, 0x23u, 0x56u, (uint16)(uint32)(BS_UDB_2_1_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B1_P3_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 85 */
 616   1                      { 128u, 0x23u, 0x57u, (uint16)(uint32)(BS_UDBSWITCH_0_2_VAL), (uint16)(CYDEV_UCFG_B0_P4_ROUTE_BASE) },  /
             -* TD 86 */
 617   1                      { 128u, 0x23u, 0x58u, (uint16)(uint32)(BS_UDB_1_2_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P4_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 87 */
 618   1                      { 128u, 0x23u, 0x59u, (uint16)(uint32)(BS_UDBSWITCH_1_2_VAL), (uint16)(CYDEV_UCFG_B0_P3_ROUTE_BASE) },  /
             -* TD 88 */
 619   1                      { 128u, 0x23u, 0x5Au, (uint16)(uint32)(BS_UDB_2_2_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P3_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 89 */
 620   1                      { 128u, 0x23u, 0x5Bu, (uint16)(uint32)(BS_UDBSWITCH_0_3_VAL), (uint16)(CYDEV_UCFG_B0_P5_ROUTE_BASE) },  /
             -* TD 90 */
 621   1                      { 128u, 0x23u, 0x5Cu, (uint16)(uint32)(BS_UDB_1_3_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P5_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 91 */
 622   1                      { 128u, 0x23u, 0x5Du, (uint16)(uint32)(BS_UDBSWITCH_1_3_VAL), (uint16)(CYDEV_UCFG_B0_P2_ROUTE_BASE) },  /
             -* TD 92 */
 623   1                      { 128u, 0x23u, 0x5Eu, (uint16)(uint32)(BS_UDB_2_3_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P2_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 93 */
 624   1                      { 128u, 0x23u, 0x5Fu, (uint16)(uint32)(BS_UDBSWITCH_0_4_VAL), (uint16)(CYDEV_UCFG_B0_P6_ROUTE_BASE) },  /
             -* TD 94 */
 625   1                      { 128u, 0x23u, 0x60u, (uint16)(uint32)(BS_UDB_1_4_HV_ROUTING_VAL), (uint16)(CYDEV_UCFG_B0_P6_ROUTE_BASE 
             -+ 0x00000080u) },     /* TD 95 */
 626   1                      { 128u, 0x23u, 0xFEu, (uint16)(uint32)(BS_UDBSWITCH_1_4_VAL), (uint16)(CYDEV_UCFG_B0_P1_ROUTE_BASE) },  /
             -* TD 96 */
 627   1              };
 628   1      
 629   1              DMA_ZERO_VAL = 0u;
 630   1              CY_SET_REG8((void CYXDATA *)CYREG_PHUB_CFGMEM0_CFG0, 0x10u);    /* set burstcnt */
 631   1              CY_SET_REG8((void CYXDATA *)CYREG_PHUB_CH0_BASIC_CFG, 0x01u);   /* enable ch0 */
 632   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH0_BASIC_STATUS+1u), 0x00u);   /* set first TD to 0 */
 633   1              CY_SET_REG16((void CYXDATA *)CYREG_PHUB_TDMEM0_ORIG_TD0, 96u*8u);       /* transfer size */
 634   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_TDMEM0_ORIG_TD0+2u), 0x01u);    /* set next TD to 1 */
 635   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_TDMEM0_ORIG_TD0+3u), 0xA3u);    /* set TD flags */
 636   1              CY_SET_REG16((void CYXDATA *)CYREG_PHUB_TDMEM0_ORIG_TD1, (uint16)((uint32)CFG_TD_LIST0 & 0x0000FFFFu)); /
             -* set td0's src addr */
 637   1              CY_SET_REG16((void CYXDATA *)(CYREG_PHUB_TDMEM0_ORIG_TD1+2u), CYDEV_PHUB_TDMEM1_BASE);  /* set td0's dst a
             -ddr */
 638   1              CY_SET_REG16((void CYXDATA *)CYREG_PHUB_CFGMEM0_CFG1, (uint16)(CYDEV_FLS_BASE >> 16));  /* set ch0's src h
             -igh addr */
 639   1              CY_SET_REG16((void CYXDATA *)(CYREG_PHUB_CFGMEM0_CFG1+2u), (uint16)(CYDEV_PHUB_TDMEM1_BASE >> 16));     /* se
             -t ch0's dst high addr */
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 15  

 640   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH1_BASIC_STATUS+1u), 0x0Bu);   /* ch1 first TD: 11 */
 641   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH2_BASIC_STATUS+1u), 0x0Cu);   /* ch2 first TD: 12 */
 642   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH4_BASIC_STATUS+1u), 0x0Eu);   /* ch4 first TD: 14 */
 643   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH5_BASIC_STATUS+1u), 0x1Fu);   /* ch5 first TD: 31 */
 644   1              CY_SET_REG8((void CYXDATA *)(CYREG_PHUB_CH6_BASIC_STATUS+1u), 0x29u);   /* ch6 first TD: 41 */
 645   1      
 646   1              CY_CFG_MEMORY_BARRIER();
 647   1              CY_SET_REG8((void CYXDATA *)CYREG_PHUB_CH0_ACTION, 0x01u); /* cpu_req */
 648   1              CY_CFG_MEMORY_BARRIER();
 649   1      
 650   1              /* Wait for all DMA transfers to complete */
 651   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH0_BASIC_STATUS) & 0x01u)){}
 652   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH1_BASIC_STATUS) & 0x01u)){}
 653   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH2_BASIC_STATUS) & 0x01u)){}
 654   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH4_BASIC_STATUS) & 0x01u)){}
 655   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH5_BASIC_STATUS) & 0x01u)){}
 656   1              while(0u != (CY_GET_REG8((void CYXDATA *)CYREG_PHUB_CH6_BASIC_STATUS) & 0x01u)){}
 657   1      
 658   1      
 659   1              CYCONFIGCPY((void CYFAR *)(CYREG_IDMUX_DRQ_CTL0), (const void CYFAR *)(BS_IDMUX_VAL), 6u);
 660   1      
 661   1      }
 662          /*******************************************************************************
 663          * Function Name: ClockSetup
 664          ********************************************************************************
 665          *
 666          * Summary:
 667          *  Performs the initialization of all of the clocks in the device based on the
 668          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 669          *  clocks and setting the necessary dividers to produce the desired frequency. 
 670          *
 671          * Parameters:
 672          *  void
 673          *
 674          * Return:
 675          *  void
 676          *
 677          *******************************************************************************/
 678          static void ClockSetup(void);
 679          static void ClockSetup(void)
 680          {
 681   1              /* CYDEV_CLKDIST_ACFG0_CFG0 Address: CYREG_CLKDIST_ACFG0_CFG0 Size (bytes): 4 */
 682   1              DMAINITSEC static const uint8 CYCODE BS_CYDEV_CLKDIST_ACFG0_CFG0_VAL[] = {
 683   1                      0x15u, 0x00u, 0x18u, 0x01u};
 684   1      
 685   1              uint32 timeout;
 686   1              uint8 pllLock;
 687   1      
 688   1      
 689   1              /* Configure Digital Clocks based on settings from Clock DWR */
 690   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG0_CFG0), 0x0002u);
 691   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG0_CFG0 + 0x2u), 0x18u);
 692   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG1_CFG0), 0x0000u);
 693   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG1_CFG0 + 0x2u), 0x50u);
 694   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG2_CFG0), 0x0FFFu);
 695   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG2_CFG0 + 0x2u), 0x1Bu);
 696   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG3_CFG0), 0x000Bu);
 697   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG3_CFG0 + 0x2u), 0x19u);
 698   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG4_CFG0), 0x002Fu);
 699   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG4_CFG0 + 0x2u), 0x18u);
 700   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG5_CFG0), 0x00EFu);
 701   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG5_CFG0 + 0x2u), 0x18u);
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 16  

 702   1      
 703   1              /* Configure Analog Clocks based on settings from Clock DWR */
 704   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_CLKDIST_ACFG0_CFG0), (const void CYCODE *)(BS_CYDEV_CLKDIST_ACFG0_CF
             -G0_VAL), 4u);
 705   1      
 706   1              /* Configure ILO based on settings from Clock DWR */
 707   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x06u);
 708   1      
 709   1              /* Configure IMO based on settings from Clock DWR */
 710   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x52u);
 711   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8((void CYFAR *)CYREG_FLSHID_CUST_TABLES_IMO
             -_USB)));
 712   1      
 713   1              /* Configure PLL based on settings from Clock DWR */
 714   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0710u);
 715   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1251u);
 716   1              /* Wait up to 250us for the PLL to lock */
 717   1              pllLock = 0u;
 718   1              for (timeout = 250u / 10u; (timeout > 0u) && (pllLock != 0x03u); timeout--)
 719   1              { 
 720   2                      pllLock = 0x03u & ((uint8)((uint8)pllLock << 1) | ((CY_GET_REG8((void CYXDATA *)CYREG_FASTCLK_PLL_SR) & 
             -0x01u) >> 0));
 721   2                      CyDelayCycles(10u * 48u); /* Delay 10us based on 48MHz clock */
 722   2              }
 723   1              /* If we ran out of time the PLL didn't lock so go to the error function */
 724   1              if (timeout == 0u)
 725   1              {
 726   2                      CyClockStartupError(CYCLOCKSTART_PLL_ERROR);
 727   2              }
 728   1      
 729   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 730   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0100u);
 731   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07u);
 732   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00u);
 733   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48u);
 734   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00u);
 735   1      
 736   1              /* Configure USB Clock based on settings from Clock DWR */
 737   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_UCFG), 0x00u);
 738   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02u);
 739   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DLY1), 0x04u);
 740   1      
 741   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG2), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG2) | 0x3Fu
             -)));
 742   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG1), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG1) | 0x01u
             -)));
 743   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG0), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x80u
             -)));
 744   1      }
 745          
 746          
 747          /* Analog API Functions */
 748          
 749          
 750          /*******************************************************************************
 751          * Function Name: AnalogSetDefault
 752          ********************************************************************************
 753          *
 754          * Summary:
 755          *  Sets up the analog portions of the chip to default values based on chip
 756          *  configuration options from the project.
 757          *
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 17  

 758          * Parameters:
 759          *  void
 760          *
 761          * Return:
 762          *  void
 763          *
 764          *******************************************************************************/
 765          static void AnalogSetDefault(void);
 766          static void AnalogSetDefault(void)
 767          {
 768   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8((void CYFAR *)(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u));
 769   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT0), (bg_xover_inl_trim & 0x07u));
 770   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT1), ((bg_xover_inl_trim >> 4) & 0x0Fu));
 771   1              CY_SET_REG8((void CYXDATA *)CYREG_PRT0_AG, 0xE0u);
 772   1              CY_SET_REG8((void CYXDATA *)CYREG_DSM0_SW0, 0xE0u);
 773   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, 0x44u);
 774   1      }
 775          
 776          
 777          /*******************************************************************************
 778          * Function Name: SetAnalogRoutingPumps
 779          ********************************************************************************
 780          *
 781          * Summary:
 782          * Enables or disables the analog pumps feeding analog routing switches.
 783          * Intended to be called at startup, based on the Vdda system configuration;
 784          * may be called during operation when the user informs us that the Vdda voltage
 785          * crossed the pump threshold.
 786          *
 787          * Parameters:
 788          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 789          *
 790          * Return:
 791          *  void
 792          *
 793          *******************************************************************************/
 794          void SetAnalogRoutingPumps(uint8 enabled)
 795          {
 796   1              uint8 regValue = CY_GET_REG8((void CYXDATA *)CYREG_PUMP_CR0);
 797   1              if (enabled != 0u)
 798   1              {
 799   2                      regValue |= 0x22u;
 800   2              }
 801   1              else
 802   1              {
 803   2                      regValue &= (uint8)~0x22u;
 804   2              }
 805   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, regValue);
 806   1      }
 807          
 808          #define CY_AMUX_UNUSED CYREG_BOOST_SR
 809          /* This is an implementation detail of the AMux. Code that depends on it may be
 810             incompatible with other versions of PSoC Creator. */
 811          uint8 CYXDATA * const CYCODE ADC_AMux__addrTable[2] = {
 812                  (uint8 CYXDATA *)CYREG_DSM0_SW3, 
 813                  (uint8 CYXDATA *)CY_AMUX_UNUSED, 
 814          };
 815          
 816          /* This is an implementation detail of the AMux. Code that depends on it may be
 817             incompatible with other versions of PSoC Creator. */
 818          const uint8 CYCODE ADC_AMux__maskTable[2] = {
 819                  0x40u, 
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 18  

 820                  0x00u, 
 821          };
 822          
 823          /*******************************************************************************
 824          * Function Name: ADC_AMux_Set
 825          ********************************************************************************
 826          * Summary:
 827          *  This function is used to set a particular channel as active on the AMux.
 828          *
 829          * Parameters:  
 830          *   channel - The mux channel input to set as active
 831          *
 832          * Return:
 833          *   void
 834          *
 835          *******************************************************************************/
 836          void ADC_AMux_Set(uint8 channel)
 837          {
 838   1              if (channel < 2)
 839   1              {
 840   2                      *ADC_AMux__addrTable[channel] |= ADC_AMux__maskTable[channel];
 841   2              }
 842   1      }
 843          
 844          /*******************************************************************************
 845          * Function Name: ADC_AMux_Unset
 846          ********************************************************************************
 847          * Summary:
 848          *  This function is used to clear a particular channel from being active on the
 849          *  AMux.
 850          *
 851          * Parameters:  
 852          *   channel - The mux channel input to mark inactive
 853          *
 854          * Return:
 855          *   void
 856          *
 857          *******************************************************************************/
 858          void ADC_AMux_Unset(uint8 channel)
 859          {
 860   1              if (channel < 2)
 861   1              {
 862   2                      *ADC_AMux__addrTable[channel] &= (uint8)~ADC_AMux__maskTable[channel];
 863   2              }
 864   1      }
 865          
 866          
 867          
 868          /*******************************************************************************
 869          * Function Name: cyfitter_cfg
 870          ********************************************************************************
 871          * Summary:
 872          *  This function is called by the start-up code for the selected device. It
 873          *  performs all of the necessary device configuration based on the design
 874          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 875          *  as Clocks and Pins as well as any component configuration that is necessary.
 876          *
 877          * Parameters:  
 878          *   void
 879          *
 880          * Return:
 881          *   void
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 19  

 882          *
 883          *******************************************************************************/
 884          
 885          void cyfitter_cfg(void)
 886          {
 887   1              /* IOPINS0_0 Address: CYREG_PRT0_DM0 Size (bytes): 8 */
 888   1              DMAINITSEC static const uint8 CYCODE BS_IOPINS0_0_VAL[] = {
 889   1                      0x00u, 0x01u, 0x01u, 0x00u, 0x01u, 0xE0u, 0xE0u, 0x00u};
 890   1      
 891   1              /* IOPINS0_7 Address: CYREG_PRT12_DM0 Size (bytes): 8 */
 892   1              DMAINITSEC static const uint8 CYCODE BS_IOPINS0_7_VAL[] = {
 893   1                      0x00u, 0x0Cu, 0x0Cu, 0x00u, 0x0Cu, 0x00u, 0x00u, 0x00u};
 894   1      
 895   1              /* IOPINS0_8 Address: CYREG_PRT15_DR Size (bytes): 10 */
 896   1              DMAINITSEC static const uint8 CYCODE BS_IOPINS0_8_VAL[] = {
 897   1                      0x04u, 0x00u, 0x00u, 0x0Cu, 0x08u, 0x00u, 0x08u, 0x00u, 0x00u, 0x00u};
 898   1      
 899   1              /* IOPINS0_1 Address: CYREG_PRT1_DR Size (bytes): 10 */
 900   1              DMAINITSEC static const uint8 CYCODE BS_IOPINS0_1_VAL[] = {
 901   1                      0x00u, 0x00u, 0x00u, 0x7Fu, 0x7Bu, 0x00u, 0x7Bu, 0x00u, 0x00u, 0x00u};
 902   1      
 903   1              /* IOPINS0_2 Address: CYREG_PRT2_DM0 Size (bytes): 8 */
 904   1              DMAINITSEC static const uint8 CYCODE BS_IOPINS0_2_VAL[] = {
 905   1                      0x30u, 0xD8u, 0xC8u, 0x00u, 0xD8u, 0x00u, 0x00u, 0x00u};
 906   1      
 907   1              /* PHUB_CFGMEM10 Address: CYREG_PHUB_CFGMEM10_CFG0 Size (bytes): 4 */
 908   1              DMAINITSEC static const uint8 CYCODE BS_PHUB_CFGMEM10_VAL[] = {
 909   1                      0x00u, 0x0Au, 0x00u, 0x00u};
 910   1      
 911   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 912   1              CY_SET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG) | 
             -0x01u));
 913   1      
 914   1              {
 915   2                      cfg_dma_init();
 916   2      
 917   2                      /* Perform normal device configuration. Order is not critical for these items. */
 918   2                      CY_SET_REG8((void CYXDATA *)(CYREG_DSM0_CR3), 0x0Au);
 919   2                      CYCONFIGCPYCODE((void CYFAR *)(CYREG_PHUB_CFGMEM10_CFG0), (const void CYCODE *)(BS_PHUB_CFGMEM10_VAL), 4
             -u);
 920   2      
 921   2                      /* Enable digital routing */
 922   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL
             -) | 0x02u);
 923   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL
             -) | 0x02u);
 924   2      
 925   2                      /* Enable UDB array */
 926   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x40u);
 927   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2, CY_GET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2) | 0x10u)
             -;
 928   2              }
 929   1      
 930   1      
 931   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
 932   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT0_DM0), (const void CYCODE *)(BS_IOPINS0_0_VAL), 8u);
 933   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT12_DM0), (const void CYCODE *)(BS_IOPINS0_7_VAL), 8u);
 934   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT15_DR), (const void CYCODE *)(BS_IOPINS0_8_VAL), 10u);
 935   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT1_DR), (const void CYCODE *)(BS_IOPINS0_1_VAL), 10u);
 936   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT2_DM0), (const void CYCODE *)(BS_IOPINS0_2_VAL), 8u);
 937   1              CY_SET_REG8((void CYXDATA *)(CYREG_INTC_CSR_EN), 0x01u);
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 20  

 938   1              /* Switch Boost to the precision bandgap reference from its internal reference */
 939   1              CY_SET_REG8((void CYXDATA *)CYREG_BOOST_CR2, (CY_GET_REG8((void CYXDATA *)CYREG_BOOST_CR2) | 0x08u));
 940   1              if (CYDEV_CHIP_REV_ACTUAL < 5u)
 941   1              {
 942   2                      CY_SET_REG8((void CYXDATA *)CYREG_PWRSYS_WAKE_TR2, 0x3Au);
 943   2              }
 944   1      
 945   1      
 946   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 947   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xF1u : 0xC0u));
 948   1              /* Setup clocks based on selections from Clock DWR */
 949   1              ClockSetup();
 950   1      
 951   1              /* Perform basic analog initialization to defaults */
 952   1              AnalogSetDefault();
 953   1      
 954   1              /* Configure alternate active mode */
 955   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (const void CYFAR *)CYDEV_PM_ACT_BASE, 14u);
 956   1              CY_SET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0) & (uint8)
             -~0x02u);        /* Disable CPU */
 957   1      }
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 21  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _CyClockStartupError (BEGIN)
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 75
0000         ?C0001:
                                           ; SOURCE LINE # 87
0000 80FE              SJMP    ?C0001
0002 22                RET     
             ; FUNCTION _CyClockStartupError (END)

             ; FUNCTION cfg_dma_init (BEGIN)
                                           ; SOURCE LINE # 309
                                           ; SOURCE LINE # 310
                                           ; SOURCE LINE # 629
0000 E4                CLR     A
0001 FF                MOV     R7,A
0002 FE                MOV     R6,A
0003 FD                MOV     R5,A
0004 FC                MOV     R4,A
0005 900000      R     MOV     DPTR,#DMA_ZERO_VAL
0008 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 630
000B 907600            MOV     DPTR,#07600H
000E 7410              MOV     A,#010H
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 631
0011 907010            MOV     DPTR,#07010H
0014 7401              MOV     A,#01H
0016 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 632
0017 907019            MOV     DPTR,#07019H
001A E4                CLR     A
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 633
001C 7B02              MOV     R3,#02H
001E 7A78              MOV     R2,#078H
0020 F9                MOV     R1,A
0021 FD                MOV     R5,A
0022 7C03              MOV     R4,#03H
0024 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 634
0027 907802            MOV     DPTR,#07802H
002A 7401              MOV     A,#01H
002C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 635
002D A3                INC     DPTR
002E 74A3              MOV     A,#0A3H
0030 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 636
0031 7B02              MOV     R3,#02H
0033 7A78              MOV     R2,#078H
0035 7904              MOV     R1,#04H
0037 C003              PUSH    AR3
0039 C002              PUSH    AR2
003B C001              PUSH    AR1
003D 7BFF              MOV     R3,#0FFH
003F 7A00        R     MOV     R2,#HIGH CFG_TD_LIST0
0041 7900        R     MOV     R1,#LOW CFG_TD_LIST0
0043 E9                MOV     A,R1
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 22  

0044 EA                MOV     A,R2
0045 E4                CLR     A
0046 AD01              MOV     R5,AR1
0048 AC02              MOV     R4,AR2
004A D001              POP     AR1
004C D002              POP     AR2
004E D003              POP     AR3
0050 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 637
0053 7B02              MOV     R3,#02H
0055 7A78              MOV     R2,#078H
0057 7906              MOV     R1,#06H
0059 7D08              MOV     R5,#08H
005B 7C78              MOV     R4,#078H
005D 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 638
0060 7B02              MOV     R3,#02H
0062 7A76              MOV     R2,#076H
0064 7904              MOV     R1,#04H
0066 7D10              MOV     R5,#010H
0068 7C00              MOV     R4,#00H
006A 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 639
006D 7B02              MOV     R3,#02H
006F 7A76              MOV     R2,#076H
0071 7906              MOV     R1,#06H
0073 E4                CLR     A
0074 FD                MOV     R5,A
0075 FC                MOV     R4,A
0076 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 640
0079 907029            MOV     DPTR,#07029H
007C 740B              MOV     A,#0BH
007E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 641
007F 907039            MOV     DPTR,#07039H
0082 04                INC     A
0083 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 642
0084 907059            MOV     DPTR,#07059H
0087 740E              MOV     A,#0EH
0089 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 643
008A 907069            MOV     DPTR,#07069H
008D 741F              MOV     A,#01FH
008F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 644
0090 907079            MOV     DPTR,#07079H
0093 7429              MOV     A,#029H
0095 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 646
                                           ; SOURCE LINE # 647
0096 907014            MOV     DPTR,#07014H
0099 7401              MOV     A,#01H
009B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 648
009C         ?C0010:
                                           ; SOURCE LINE # 651
009C 907018            MOV     DPTR,#07018H
009F E0                MOVX    A,@DPTR
00A0 5401              ANL     A,#01H
00A2 70F8              JNZ     ?C0010
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 23  

00A4         ?C0011:
00A4         ?C0012:
                                           ; SOURCE LINE # 652
00A4 907028            MOV     DPTR,#07028H
00A7 E0                MOVX    A,@DPTR
00A8 5401              ANL     A,#01H
00AA 70F8              JNZ     ?C0012
00AC         ?C0013:
00AC         ?C0014:
                                           ; SOURCE LINE # 653
00AC 907038            MOV     DPTR,#07038H
00AF E0                MOVX    A,@DPTR
00B0 5401              ANL     A,#01H
00B2 70F8              JNZ     ?C0014
00B4         ?C0015:
00B4         ?C0016:
                                           ; SOURCE LINE # 654
00B4 907058            MOV     DPTR,#07058H
00B7 E0                MOVX    A,@DPTR
00B8 5401              ANL     A,#01H
00BA 70F8              JNZ     ?C0016
00BC         ?C0017:
00BC         ?C0018:
                                           ; SOURCE LINE # 655
00BC 907068            MOV     DPTR,#07068H
00BF E0                MOVX    A,@DPTR
00C0 5401              ANL     A,#01H
00C2 70F8              JNZ     ?C0018
00C4         ?C0019:
00C4         ?C0020:
                                           ; SOURCE LINE # 656
00C4 907078            MOV     DPTR,#07078H
00C7 E0                MOVX    A,@DPTR
00C8 5401              ANL     A,#01H
00CA 70F8              JNZ     ?C0020
00CC         ?C0021:
                                           ; SOURCE LINE # 659
00CC 7B08              MOV     R3,#08H
00CE 7A04              MOV     R2,#04H
00D0 79C0              MOV     R1,#0C0H
00D2 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00D5 7401              MOV     A,#01H
00D7 F0                MOVX    @DPTR,A
00D8 A3                INC     DPTR
00D9 7451              MOV     A,#051H
00DB F0                MOVX    @DPTR,A
00DC A3                INC     DPTR
00DD 7410              MOV     A,#010H
00DF F0                MOVX    @DPTR,A
00E0 7F06              MOV     R7,#06H
00E2 7E00              MOV     R6,#00H
00E4 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 661
00E7 22                RET     
             ; FUNCTION cfg_dma_init (END)

             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 679
                                           ; SOURCE LINE # 680
                                           ; SOURCE LINE # 690
0000 7B00              MOV     R3,#00H
0002 7A40              MOV     R2,#040H
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 24  

0004 7980              MOV     R1,#080H
0006 7D02              MOV     R5,#02H
0008 7C00              MOV     R4,#00H
000A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 691
000D 904082            MOV     DPTR,#04082H
0010 7418              MOV     A,#018H
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 692
0013 7B00              MOV     R3,#00H
0015 7A40              MOV     R2,#040H
0017 7984              MOV     R1,#084H
0019 E4                CLR     A
001A FD                MOV     R5,A
001B FC                MOV     R4,A
001C 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 693
001F 904086            MOV     DPTR,#04086H
0022 7450              MOV     A,#050H
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 694
0025 7B00              MOV     R3,#00H
0027 7A40              MOV     R2,#040H
0029 7988              MOV     R1,#088H
002B 7DFF              MOV     R5,#0FFH
002D 7C0F              MOV     R4,#0FH
002F 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 695
0032 90408A            MOV     DPTR,#0408AH
0035 741B              MOV     A,#01BH
0037 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 696
0038 7B00              MOV     R3,#00H
003A 7A40              MOV     R2,#040H
003C 798C              MOV     R1,#08CH
003E 7D0B              MOV     R5,#0BH
0040 7C00              MOV     R4,#00H
0042 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 697
0045 90408E            MOV     DPTR,#0408EH
0048 7419              MOV     A,#019H
004A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 698
004B 7B00              MOV     R3,#00H
004D 7A40              MOV     R2,#040H
004F 7990              MOV     R1,#090H
0051 7D2F              MOV     R5,#02FH
0053 7C00              MOV     R4,#00H
0055 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 699
0058 904092            MOV     DPTR,#04092H
005B 7418              MOV     A,#018H
005D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 700
005E 7B00              MOV     R3,#00H
0060 7A40              MOV     R2,#040H
0062 7994              MOV     R1,#094H
0064 7DEF              MOV     R5,#0EFH
0066 7C00              MOV     R4,#00H
0068 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 701
006B 904096            MOV     DPTR,#04096H
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 25  

006E 7418              MOV     A,#018H
0070 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 704
0071 7C00        R     MOV     R4,#HIGH BS_CYDEV_CLKDIST_ACFG0_CFG0_VAL
0073 7D00        R     MOV     R5,#LOW BS_CYDEV_CLKDIST_ACFG0_CFG0_VAL
0075 7B00              MOV     R3,#00H
0077 7A41              MOV     R2,#041H
0079 7900              MOV     R1,#00H
007B 7F04              MOV     R7,#04H
007D 7E00              MOV     R6,#00H
007F 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 707
0082 904300            MOV     DPTR,#04300H
0085 7406              MOV     A,#06H
0087 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 710
0088 904200            MOV     DPTR,#04200H
008B 7452              MOV     A,#052H
008D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 711
008E 7B0C              MOV     R3,#0CH
0090 7A01              MOV     R2,#01H
0092 790F              MOV     R1,#0FH
0094 120000      E     LCALL   _cyread8
0097 9046A1            MOV     DPTR,#046A1H
009A EF                MOV     A,R7
009B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 714
009C 7B00              MOV     R3,#00H
009E 7A42              MOV     R2,#042H
00A0 7922              MOV     R1,#022H
00A2 7D10              MOV     R5,#010H
00A4 7C07              MOV     R4,#07H
00A6 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 715
00A9 7B00              MOV     R3,#00H
00AB 7A42              MOV     R2,#042H
00AD 7920              MOV     R1,#020H
00AF 7D51              MOV     R5,#051H
00B1 7C12              MOV     R4,#012H
00B3 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 717
00B6 E4                CLR     A
00B7 900000      R     MOV     DPTR,#pllLock
00BA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 718
00BB 7F19              MOV     R7,#019H
00BD FE                MOV     R6,A
00BE FD                MOV     R5,A
00BF FC                MOV     R4,A
00C0 900000      R     MOV     DPTR,#timeout
00C3 120000      E     LCALL   ?C?LSTXDATA
00C6         ?C0023:
00C6 900000      R     MOV     DPTR,#timeout
00C9 E0                MOVX    A,@DPTR
00CA A3                INC     DPTR
00CB E0                MOVX    A,@DPTR
00CC A3                INC     DPTR
00CD E0                MOVX    A,@DPTR
00CE FE                MOV     R6,A
00CF A3                INC     DPTR
00D0 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 26  

00D1 D3                SETB    C
00D2 9400              SUBB    A,#00H
00D4 EE                MOV     A,R6
00D5 9400              SUBB    A,#00H
00D7 404A              JC      ?C0024
00D9 A3                INC     DPTR
00DA E0                MOVX    A,@DPTR
00DB FF                MOV     R7,A
00DC 6403              XRL     A,#03H
00DE 6043              JZ      ?C0024
                                           ; SOURCE LINE # 719
                                           ; SOURCE LINE # 720
00E0 904225            MOV     DPTR,#04225H
00E3 E0                MOVX    A,@DPTR
00E4 5401              ANL     A,#01H
00E6 FE                MOV     R6,A
00E7 EF                MOV     A,R7
00E8 25E0              ADD     A,ACC
00EA 4E                ORL     A,R6
00EB 5403              ANL     A,#03H
00ED 900000      R     MOV     DPTR,#pllLock
00F0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 721
00F1 E4                CLR     A
00F2 7FE0              MOV     R7,#0E0H
00F4 7E01              MOV     R6,#01H
00F6 FD                MOV     R5,A
00F7 FC                MOV     R4,A
00F8 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 722
00FB 900000      R     MOV     DPTR,#timeout
00FE E0                MOVX    A,@DPTR
00FF FC                MOV     R4,A
0100 A3                INC     DPTR
0101 E0                MOVX    A,@DPTR
0102 FD                MOV     R5,A
0103 A3                INC     DPTR
0104 E0                MOVX    A,@DPTR
0105 FE                MOV     R6,A
0106 A3                INC     DPTR
0107 E0                MOVX    A,@DPTR
0108 FF                MOV     R7,A
0109 74FF              MOV     A,#0FFH
010B EF                MOV     A,R7
010C 24FF              ADD     A,#0FFH
010E FF                MOV     R7,A
010F EE                MOV     A,R6
0110 34FF              ADDC    A,#0FFH
0112 FE                MOV     R6,A
0113 ED                MOV     A,R5
0114 34FF              ADDC    A,#0FFH
0116 FD                MOV     R5,A
0117 EC                MOV     A,R4
0118 34FF              ADDC    A,#0FFH
011A FC                MOV     R4,A
011B 900000      R     MOV     DPTR,#timeout
011E 120000      E     LCALL   ?C?LSTXDATA
0121 80A3              SJMP    ?C0023
0123         ?C0024:
                                           ; SOURCE LINE # 724
0123 900000      R     MOV     DPTR,#timeout
0126 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 27  

0127 A3                INC     DPTR
0128 E0                MOVX    A,@DPTR
0129 A3                INC     DPTR
012A E0                MOVX    A,@DPTR
012B FE                MOV     R6,A
012C A3                INC     DPTR
012D E0                MOVX    A,@DPTR
012E 4E                ORL     A,R6
012F 7005              JNZ     ?C0026
                                           ; SOURCE LINE # 725
                                           ; SOURCE LINE # 726
0131 7F03              MOV     R7,#03H
0133 120000      R     LCALL   _CyClockStartupError
                                           ; SOURCE LINE # 727
0136         ?C0026:
                                           ; SOURCE LINE # 730
0136 7B00              MOV     R3,#00H
0138 7A40              MOV     R2,#040H
013A 7904              MOV     R1,#04H
013C 7D00              MOV     R5,#00H
013E 7C01              MOV     R4,#01H
0140 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 731
0143 904004            MOV     DPTR,#04004H
0146 7407              MOV     A,#07H
0148 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 732
0149 904006            MOV     DPTR,#04006H
014C E4                CLR     A
014D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 733
014E 904008            MOV     DPTR,#04008H
0151 7448              MOV     A,#048H
0153 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 734
0154 904004            MOV     DPTR,#04004H
0157 E4                CLR     A
0158 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 737
0159 904009            MOV     DPTR,#04009H
015C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 738
015D 904001            MOV     DPTR,#04001H
0160 7402              MOV     A,#02H
0162 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 739
0163 90400B            MOV     DPTR,#0400BH
0166 7404              MOV     A,#04H
0168 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 741
0169 9043A2            MOV     DPTR,#043A2H
016C E0                MOVX    A,@DPTR
016D 443F              ORL     A,#03FH
016F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 742
0170 9043A1            MOV     DPTR,#043A1H
0173 E0                MOVX    A,@DPTR
0174 4401              ORL     A,#01H
0176 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 743
0177 9043A0            MOV     DPTR,#043A0H
017A E0                MOVX    A,@DPTR
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 28  

017B 4480              ORL     A,#080H
017D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 744
017E 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 766
                                           ; SOURCE LINE # 767
                                           ; SOURCE LINE # 768
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
;---- Variable 'bg_xover_inl_trim' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 769
0009 EF                MOV     A,R7
000A 5407              ANL     A,#07H
000C 90586E            MOV     DPTR,#0586EH
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 770
0010 EF                MOV     A,R7
0011 C4                SWAP    A
0012 540F              ANL     A,#0FH
0014 A3                INC     DPTR
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 771
0016 90510D            MOV     DPTR,#0510DH
0019 74E0              MOV     A,#0E0H
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 772
001C 905B00            MOV     DPTR,#05B00H
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 773
0020 905876            MOV     DPTR,#05876H
0023 7444              MOV     A,#044H
0025 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 774
0026 22                RET     
             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 794
;---- Variable 'enabled' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 795
                                           ; SOURCE LINE # 796
0000 905876            MOV     DPTR,#05876H
0003 E0                MOVX    A,@DPTR
0004 FE                MOV     R6,A
;---- Variable 'regValue' assigned to Register 'R6' ----
                                           ; SOURCE LINE # 797
0005 EF                MOV     A,R7
0006 6006              JZ      ?C0029
                                           ; SOURCE LINE # 798
                                           ; SOURCE LINE # 799
0008 EE                MOV     A,R6
0009 4422              ORL     A,#022H
000B FE                MOV     R6,A
                                           ; SOURCE LINE # 800
000C 8004              SJMP    ?C0030
000E         ?C0029:
                                           ; SOURCE LINE # 802
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 29  

                                           ; SOURCE LINE # 803
000E EE                MOV     A,R6
000F 54DD              ANL     A,#0DDH
0011 FE                MOV     R6,A
                                           ; SOURCE LINE # 804
0012         ?C0030:
                                           ; SOURCE LINE # 805
0012 AF06              MOV     R7,AR6
0014 905876            MOV     DPTR,#05876H
0017 EE                MOV     A,R6
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 806
0019 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION _ADC_AMux_Set (BEGIN)
                                           ; SOURCE LINE # 836
;---- Variable 'channel' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 837
                                           ; SOURCE LINE # 838
0000 EF                MOV     A,R7
0001 C3                CLR     C
0002 9402              SUBB    A,#02H
0004 5029              JNC     ?C0033
                                           ; SOURCE LINE # 839
                                           ; SOURCE LINE # 840
0006 EF                MOV     A,R7
0007 25E0              ADD     A,ACC
0009 2400        R     ADD     A,#LOW ADC_AMux__addrTable
000B F582              MOV     DPL,A
000D E4                CLR     A
000E 3400        R     ADDC    A,#HIGH ADC_AMux__addrTable
0010 F583              MOV     DPH,A
0012 E4                CLR     A
0013 93                MOVC    A,@A+DPTR
0014 FC                MOV     R4,A
0015 7401              MOV     A,#01H
0017 93                MOVC    A,@A+DPTR
0018 F582              MOV     DPL,A
001A 8C83              MOV     DPH,R4
001C C083              PUSH    DPH
001E C082              PUSH    DPL
0020 E0                MOVX    A,@DPTR
0021 FE                MOV     R6,A
0022 EF                MOV     A,R7
0023 900000      R     MOV     DPTR,#ADC_AMux__maskTable
0026 93                MOVC    A,@A+DPTR
0027 FF                MOV     R7,A
0028 EE                MOV     A,R6
0029 4F                ORL     A,R7
002A D082              POP     DPL
002C D083              POP     DPH
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 841
                                           ; SOURCE LINE # 842
002F         ?C0033:
002F 22                RET     
             ; FUNCTION _ADC_AMux_Set (END)

             ; FUNCTION _ADC_AMux_Unset (BEGIN)
                                           ; SOURCE LINE # 858
;---- Variable 'channel' assigned to Register 'R7' ----
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 30  

                                           ; SOURCE LINE # 859
                                           ; SOURCE LINE # 860
0000 EF                MOV     A,R7
0001 C3                CLR     C
0002 9402              SUBB    A,#02H
0004 502A              JNC     ?C0035
                                           ; SOURCE LINE # 861
                                           ; SOURCE LINE # 862
0006 EF                MOV     A,R7
0007 25E0              ADD     A,ACC
0009 2400        R     ADD     A,#LOW ADC_AMux__addrTable
000B F582              MOV     DPL,A
000D E4                CLR     A
000E 3400        R     ADDC    A,#HIGH ADC_AMux__addrTable
0010 F583              MOV     DPH,A
0012 E4                CLR     A
0013 93                MOVC    A,@A+DPTR
0014 FC                MOV     R4,A
0015 7401              MOV     A,#01H
0017 93                MOVC    A,@A+DPTR
0018 F582              MOV     DPL,A
001A 8C83              MOV     DPH,R4
001C C083              PUSH    DPH
001E C082              PUSH    DPL
0020 E0                MOVX    A,@DPTR
0021 FE                MOV     R6,A
0022 EF                MOV     A,R7
0023 900000      R     MOV     DPTR,#ADC_AMux__maskTable
0026 93                MOVC    A,@A+DPTR
0027 F4                CPL     A
0028 FF                MOV     R7,A
0029 EE                MOV     A,R6
002A 5F                ANL     A,R7
002B D082              POP     DPL
002D D083              POP     DPH
002F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 863
                                           ; SOURCE LINE # 864
0030         ?C0035:
0030 22                RET     
             ; FUNCTION _ADC_AMux_Unset (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 885
                                           ; SOURCE LINE # 886
                                           ; SOURCE LINE # 912
0000 7B00              MOV     R3,#00H
0002 7A46              MOV     R2,#046H
0004 79E8              MOV     R1,#0E8H
0006 120000      E     LCALL   _cyread8
0009 EF                MOV     A,R7
000A 4401              ORL     A,#01H
000C FD                MOV     R5,A
000D 7B00              MOV     R3,#00H
000F 7A46              MOV     R2,#046H
0011 79E8              MOV     R1,#0E8H
0013 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 914
                                           ; SOURCE LINE # 915
0016 120000      R     LCALL   cfg_dma_init
                                           ; SOURCE LINE # 918
0019 905883            MOV     DPTR,#05883H
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 31  

001C 740A              MOV     A,#0AH
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 919
001F 7C00        R     MOV     R4,#HIGH BS_PHUB_CFGMEM10_VAL
0021 7D00        R     MOV     R5,#LOW BS_PHUB_CFGMEM10_VAL
0023 7B00              MOV     R3,#00H
0025 7A76              MOV     R2,#076H
0027 7950              MOV     R1,#050H
0029 7F04              MOV     R7,#04H
002B 7E00              MOV     R6,#00H
002D 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 922
0030 7B01              MOV     R3,#01H
0032 7A50              MOV     R2,#050H
0034 7903              MOV     R1,#03H
0036 120000      E     LCALL   _cyread8
0039 EF                MOV     A,R7
003A 4402              ORL     A,#02H
003C FD                MOV     R5,A
003D 7B01              MOV     R3,#01H
003F 7A50              MOV     R2,#050H
0041 7903              MOV     R1,#03H
0043 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 923
0046 7B01              MOV     R3,#01H
0048 7A50              MOV     R2,#050H
004A 7913              MOV     R1,#013H
004C 120000      E     LCALL   _cyread8
004F EF                MOV     A,R7
0050 4402              ORL     A,#02H
0052 FD                MOV     R5,A
0053 7B01              MOV     R3,#01H
0055 7A50              MOV     R2,#050H
0057 7913              MOV     R1,#013H
0059 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 926
005C 9043A0            MOV     DPTR,#043A0H
005F E0                MOVX    A,@DPTR
0060 4440              ORL     A,#040H
0062 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 927
0063 9043C2            MOV     DPTR,#043C2H
0066 E0                MOVX    A,@DPTR
0067 4410              ORL     A,#010H
0069 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 928
                                           ; SOURCE LINE # 932
006A 7C00        R     MOV     R4,#HIGH BS_IOPINS0_0_VAL
006C 7D00        R     MOV     R5,#LOW BS_IOPINS0_0_VAL
006E 7B00              MOV     R3,#00H
0070 7A51              MOV     R2,#051H
0072 7902              MOV     R1,#02H
0074 7F08              MOV     R7,#08H
0076 7E00              MOV     R6,#00H
0078 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 933
007B 7C00        R     MOV     R4,#HIGH BS_IOPINS0_7_VAL
007D 7D00        R     MOV     R5,#LOW BS_IOPINS0_7_VAL
007F 7B00              MOV     R3,#00H
0081 7A51              MOV     R2,#051H
0083 79C2              MOV     R1,#0C2H
0085 7F08              MOV     R7,#08H
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 32  

0087 7E00              MOV     R6,#00H
0089 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 934
008C 7C00        R     MOV     R4,#HIGH BS_IOPINS0_8_VAL
008E 7D00        R     MOV     R5,#LOW BS_IOPINS0_8_VAL
0090 7B00              MOV     R3,#00H
0092 7A51              MOV     R2,#051H
0094 79F0              MOV     R1,#0F0H
0096 7F0A              MOV     R7,#0AH
0098 7E00              MOV     R6,#00H
009A 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 935
009D 7C00        R     MOV     R4,#HIGH BS_IOPINS0_1_VAL
009F 7D00        R     MOV     R5,#LOW BS_IOPINS0_1_VAL
00A1 7B00              MOV     R3,#00H
00A3 7A51              MOV     R2,#051H
00A5 7910              MOV     R1,#010H
00A7 7F0A              MOV     R7,#0AH
00A9 7E00              MOV     R6,#00H
00AB 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 936
00AE 7C00        R     MOV     R4,#HIGH BS_IOPINS0_2_VAL
00B0 7D00        R     MOV     R5,#LOW BS_IOPINS0_2_VAL
00B2 7B00              MOV     R3,#00H
00B4 7A51              MOV     R2,#051H
00B6 7922              MOV     R1,#022H
00B8 7F08              MOV     R7,#08H
00BA 7E00              MOV     R6,#00H
00BC 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 937
00BF 9044F4            MOV     DPTR,#044F4H
00C2 7401              MOV     A,#01H
00C4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 939
00C5 904322            MOV     DPTR,#04322H
00C8 E0                MOVX    A,@DPTR
00C9 4408              ORL     A,#08H
00CB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 940
00CC 9046EC            MOV     DPTR,#046ECH
00CF E0                MOVX    A,@DPTR
00D0 C3                CLR     C
00D1 9405              SUBB    A,#05H
00D3 5006              JNC     ?C0036
                                           ; SOURCE LINE # 941
                                           ; SOURCE LINE # 942
00D5 904689            MOV     DPTR,#04689H
00D8 743A              MOV     A,#03AH
00DA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 943
00DB         ?C0036:
                                           ; SOURCE LINE # 947
00DB 904800            MOV     DPTR,#04800H
00DE 74F1              MOV     A,#0F1H
00E0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 949
00E1 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 952
00E4 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 955
00E7 7B00              MOV     R3,#00H
00E9 7A43              MOV     R2,#043H
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/11/2017 14:42:47 PAGE 33  

00EB 79A0              MOV     R1,#0A0H
00ED C003              PUSH    AR3
00EF C002              PUSH    AR2
00F1 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00F4 EB                MOV     A,R3
00F5 F0                MOVX    @DPTR,A
00F6 A3                INC     DPTR
00F7 EA                MOV     A,R2
00F8 F0                MOVX    @DPTR,A
00F9 A3                INC     DPTR
00FA 74B0              MOV     A,#0B0H
00FC F0                MOVX    @DPTR,A
00FD D002              POP     AR2
00FF D003              POP     AR3
0101 7F0E              MOV     R7,#0EH
0103 7E00              MOV     R6,#00H
0105 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 956
0108 9043B0            MOV     DPTR,#043B0H
010B E0                MOVX    A,@DPTR
010C 54FD              ANL     A,#0FDH
010E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 957
010F 22                RET     
             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1052    ----
   CONSTANT SIZE    =   3047    ----
   XDATA SIZE       =      4       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
